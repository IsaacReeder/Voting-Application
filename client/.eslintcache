[{"/Users/isaacr./Desktop/voting/client/src/index.js":"1","/Users/isaacr./Desktop/voting/client/src/App.js":"2","/Users/isaacr./Desktop/voting/client/src/reportWebVitals.js":"3","/Users/isaacr./Desktop/voting/client/src/components/PollResult.js":"4","/Users/isaacr./Desktop/voting/client/src/components/Home.js":"5","/Users/isaacr./Desktop/voting/client/src/components/PollForm.js":"6","/Users/isaacr./Desktop/voting/client/src/components/PollVoteForm.js":"7","/Users/isaacr./Desktop/voting/client/src/components/PollSummary.js":"8"},{"size":500,"mtime":1610490070271,"results":"9","hashOfConfig":"10"},{"size":1128,"mtime":1610742275172,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610490070272,"results":"12","hashOfConfig":"10"},{"size":2055,"mtime":1610495234617,"results":"13","hashOfConfig":"10"},{"size":2255,"mtime":1610490472967,"results":"14","hashOfConfig":"10"},{"size":4879,"mtime":1610492033952,"results":"15","hashOfConfig":"10"},{"size":2146,"mtime":1610495281009,"results":"16","hashOfConfig":"10"},{"size":2034,"mtime":1610742943266,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"whnea1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/isaacr./Desktop/voting/client/src/index.js",[],["39","40"],"/Users/isaacr./Desktop/voting/client/src/App.js",[],"/Users/isaacr./Desktop/voting/client/src/reportWebVitals.js",[],"/Users/isaacr./Desktop/voting/client/src/components/PollResult.js",["41"],"import \"moment-timezone\";\n\nimport React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { RadialChart } from \"react-vis\";\n\nexport default (props) => {\n  const { poll, setPage } = props;\n  const colors = [\"red\", \"blue\", \"orange\", \"green\"];\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col clearfix\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={(e) => setPage([\"home\", {}])}\n          >\n            Go back\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Alert variant=\"success\">\n            Thanks for voting! Here are the results.\n          </Alert>\n          <h2>{poll.question}</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <RadialChart\n            className={\"donut-chart-example\"}\n            innerRadius={100}\n            radius={140}\n            data={poll.options.map((item, index) => {\n              let count = poll.votes.reduce(\n                (accumulative, current) =>\n                  current.option === item ? accumulative + 1 : accumulative,\n                0\n              );\n              return { angle: count, label: item, color: colors[index] };\n            })}\n            showLabels\n            width={300}\n            height={300}\n          ></RadialChart>\n        </div>\n        <div className=\"col\">\n          {poll.options.map((item, index) => {\n            let count = poll.votes.reduce(\n              (accumulative, current) =>\n                current.option === item ? accumulative + 1 : accumulative,\n              0\n            );\n            return (\n              <div key={index} className=\"d-flex\">\n                <div className=\"mr-auto p-2\">{item}</div>\n                <div className=\"p-2\">{count} votes</div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"col\"></div>\n      </div>\n    </>\n  );\n};\n","/Users/isaacr./Desktop/voting/client/src/components/Home.js",["42"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport PollSummary from \"./PollSummary\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [top3, setTop3] = useState([]);\n  const [recent, setRecent] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:9000/api/polls\")\n      .then((res) => {\n        const t3 = [...res.data]\n          .sort((a, b) => b.number_of_votes - a.number_of_votes)\n          .slice(0, 3);\n        setTop3(t3);\n        const r = [...res.data].filter((item) => t3.indexOf(item) === -1);\n        setRecent(r);\n      })\n      .catch((error) => setMessage(error));\n  }, []);\n\n  return (\n    <>\n      {message !== \"\" && (\n        <Alert variant=\"danger\">\n          <p>{message}</p>\n        </Alert>\n      )}\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col clearfix\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={(e) => props.setPage([\"create\", {}])}\n          >\n            Create your own poll\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Top 3 polls</h2>\n          <div className=\"content\">\n            {top3.length !== 0 &&\n              top3.map((item, index) => {\n                return (\n                  <PollSummary\n                    key={index}\n                    poll={item}\n                    setPage={props.setPage}\n                  />\n                );\n              })}\n            {top3.length === 0 && <div>No poll available</div>}\n          </div>\n        </div>\n        <div className=\"col\">\n          <h2>Recent polls</h2>\n          <div className=\"content\">\n            {recent.length !== 0 &&\n              recent.map((item, index) => {\n                return (\n                  <PollSummary\n                    key={index}\n                    poll={item}\n                    setPage={props.setPage}\n                  />\n                );\n              })}\n            {recent.length === 0 && <div>No poll available</div>}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/isaacr./Desktop/voting/client/src/components/PollForm.js",["43"],"import React, { useState } from \"react\";\n\nimport axios from \"axios\";\n\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default (props) => {\n  const { setPage } = props;\n  //keep track of what is being typed via useState hook\n  const [question, setQuestion] = useState(\"\");\n  const [option1, setOption1] = useState(\"\");\n  const [option2, setOption2] = useState(\"\");\n  const [option3, setOption3] = useState(\"\");\n  const [option4, setOption4] = useState(\"\");\n  // error message\n  const [message, setMessage] = useState(\"\");\n\n  //handler when the form is submitted\n  const onSubmitHandler = (e) => {\n    //prevent default behavior of the submit\n    e.preventDefault();\n    if (question.length < 10) {\n      return setMessage(\n        \"Question is required and must be at least 10 characters long\"\n      );\n    }\n    //make a post request to create a new poll\n    const options = [];\n    if (option1 !== \"\") options.push(option1);\n    if (option2 !== \"\") options.push(option2);\n    if (option3 !== \"\") options.push(option3);\n    if (option4 !== \"\") options.push(option4);\n    if (question.length < 10) {\n      return setMessage(\n        \"Question is required and must be at least 10 characters long\"\n      );\n    }\n    if (options.length < 2) {\n      return setMessage(\"Options must be at least 2\");\n    }\n    const votes = [],\n      number_of_votes = 0;\n    setMessage(\"\");\n    console.log(question, options, votes, number_of_votes);\n    axios\n      .post(\"http://localhost:9000/api/polls\", {\n        question,\n        options,\n        votes,\n        number_of_votes,\n      })\n      .then((res) => setPage([\"home\", {}]))\n      .catch((error) => setMessage(error.message));\n  };\n  //onChange to update firstName and lastName\n  return (\n    <>\n      {message !== \"\" && (\n        <Alert variant=\"danger\">\n          <p>{message}</p>\n        </Alert>\n      )}\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col clearfix\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={(e) => props.setPage([\"home\", {}])}\n          >\n            Go back\n          </button>\n        </div>\n      </div>\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label htmlFor=\"questionTextArea\">Your Question: *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"questionTextArea\"\n                rows=\"3\"\n                onChange={(e) => setQuestion(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label htmlFor=\"option1Text\">Option 1: *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"option1Text\"\n                onChange={(e) => setOption1(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label htmlFor=\"option2Text\">Option 2: *</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"option2Text\"\n                onChange={(e) => setOption2(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label htmlFor=\"option3Text\">Option 3: </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"option3Text\"\n                onChange={(e) => setOption3(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={(e) => props.setPage([\"home\", {}])}\n            >\n              Cancel\n            </button>\n            &nbsp;\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit Poll\n            </button>\n            <br />\n            NOTE: fields marked with an * are mandatory\n          </div>\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label htmlFor=\"option4Text\">Option 4: </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"option4Text\"\n                onChange={(e) => setOption4(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n","/Users/isaacr./Desktop/voting/client/src/components/PollVoteForm.js",["44"],"import React, { useState } from \"react\";\n\nimport axios from \"axios\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default (props) => {\n  // error message\n  const [message, setMessage] = useState(\"\");\n\n  const { poll, setPage } = props;\n\n  //handler when a button is clicked\n  const onClickHandler = (e, option) => {\n    //prevent default behavior of the submit\n    e.preventDefault();\n    //make a post request to submit a vote\n    axios\n      .post(`http://localhost:9000/api/poll/${poll._id}/vote`, {\n        option,\n      })\n      .then((res) => {\n        setPage([\"result\", { poll: res.data }]);\n      })\n      .catch((error) => setMessage(error.message));\n  };\n\n  const buttons = [\"btn-primary\", \"btn-secondary\", \"btn-success\", \"btn-info\"];\n\n  //onChange to update firstName and lastName\n  return (\n    <>\n      {message !== \"\" && (\n        <Alert variant=\"danger\">\n          <p>{message}</p>\n        </Alert>\n      )}\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col clearfix\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={(e) => props.setPage([\"home\", {}])}\n          >\n            Go back\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>{poll.question}</h2>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap\">\n        {poll.options.map((item, index) => {\n          return (\n            <div\n              key={index}\n              className=\"card\"\n              style={{ width: \"40%\", margin: \"1% 5%\" }}\n            >\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{item}</h5>\n              </div>\n              <div className=\"card-footer\">\n                <button\n                  onClick={(e) => {\n                    onClickHandler(e, item);\n                  }}\n                  className={`btn ${buttons[index]}`}\n                >\n                  Vote {item}\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","/Users/isaacr./Desktop/voting/client/src/components/PollSummary.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":1,"nodeType":"52","endLine":70,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":7,"column":1,"nodeType":"52","endLine":81,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":7,"column":1,"nodeType":"52","endLine":160,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":6,"column":1,"nodeType":"52","endLine":81,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":7,"column":1,"nodeType":"52","endLine":70,"endColumn":3},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]