[{"/Users/isaacr./Desktop/voting/client/src/index.js":"1","/Users/isaacr./Desktop/voting/client/src/App.js":"2","/Users/isaacr./Desktop/voting/client/src/reportWebVitals.js":"3","/Users/isaacr./Desktop/voting/client/src/components/PollResult.js":"4","/Users/isaacr./Desktop/voting/client/src/components/Home.js":"5","/Users/isaacr./Desktop/voting/client/src/components/PollForm.js":"6","/Users/isaacr./Desktop/voting/client/src/components/PollVoteForm.js":"7","/Users/isaacr./Desktop/voting/client/src/components/PollSummary.js":"8"},{"size":500,"mtime":1610490070271,"results":"9","hashOfConfig":"10"},{"size":971,"mtime":1610490312621,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610490070272,"results":"12","hashOfConfig":"10"},{"size":118,"mtime":1610490180823,"results":"13","hashOfConfig":"10"},{"size":2255,"mtime":1610490472967,"results":"14","hashOfConfig":"10"},{"size":4879,"mtime":1610492033952,"results":"15","hashOfConfig":"10"},{"size":124,"mtime":1610490252764,"results":"16","hashOfConfig":"10"},{"size":1946,"mtime":1610491889675,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"whnea1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/isaacr./Desktop/voting/client/src/index.js",[],["37","38"],"/Users/isaacr./Desktop/voting/client/src/App.js",[],"/Users/isaacr./Desktop/voting/client/src/reportWebVitals.js",[],"/Users/isaacr./Desktop/voting/client/src/components/PollResult.js",[],"/Users/isaacr./Desktop/voting/client/src/components/Home.js",["39"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport PollSummary from \"./PollSummary\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default (props) => {\n  const [message, setMessage] = useState(\"\");\n  const [top3, setTop3] = useState([]);\n  const [recent, setRecent] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:9000/api/polls\")\n      .then((res) => {\n        const t3 = [...res.data]\n          .sort((a, b) => b.number_of_votes - a.number_of_votes)\n          .slice(0, 3);\n        setTop3(t3);\n        const r = [...res.data].filter((item) => t3.indexOf(item) === -1);\n        setRecent(r);\n      })\n      .catch((error) => setMessage(error));\n  }, []);\n\n  return (\n    <>\n      {message !== \"\" && (\n        <Alert variant=\"danger\">\n          <p>{message}</p>\n        </Alert>\n      )}\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col clearfix\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={(e) => props.setPage([\"create\", {}])}\n          >\n            Create your own poll\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Top 3 polls</h2>\n          <div className=\"content\">\n            {top3.length !== 0 &&\n              top3.map((item, index) => {\n                return (\n                  <PollSummary\n                    key={index}\n                    poll={item}\n                    setPage={props.setPage}\n                  />\n                );\n              })}\n            {top3.length === 0 && <div>No poll available</div>}\n          </div>\n        </div>\n        <div className=\"col\">\n          <h2>Recent polls</h2>\n          <div className=\"content\">\n            {recent.length !== 0 &&\n              recent.map((item, index) => {\n                return (\n                  <PollSummary\n                    key={index}\n                    poll={item}\n                    setPage={props.setPage}\n                  />\n                );\n              })}\n            {recent.length === 0 && <div>No poll available</div>}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/isaacr./Desktop/voting/client/src/components/PollForm.js",["40"],"/Users/isaacr./Desktop/voting/client/src/components/PollVoteForm.js",[],"/Users/isaacr./Desktop/voting/client/src/components/PollSummary.js",["41"],"import \"moment-timezone\";\n\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport { RadialChart } from \"react-vis\";\n\nexport default (props) => {\n  const { poll } = props;\n  return (\n    <div className=\"card border-dark mb-3\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <RadialChart\n            data={poll.options.map((item, index) => {\n              let count = poll.votes.reduce(\n                (accumulative, current) =>\n                  current.option === item ? accumulative + 1 : accumulative,\n                0\n              );\n              return { angle: count, name: item };\n            })}\n            showLabels\n            width={150}\n            height={150}\n          />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <a href onClick={(e) => props.setPage([\"vote\", { poll }])}>\n                {poll.question}\n              </a>\n            </h5>\n            <p className=\"card-text\">\n              {poll.options.map((item, index) => {\n                let count = poll.votes.reduce(\n                  (accumulative, current) =>\n                    current.option === item ? accumulative + 1 : accumulative,\n                  0\n                );\n                return (\n                  <span key={index}>\n                    {item}: {count} votes.{\" \"}\n                  </span>\n                );\n              })}\n            </p>\n            <p className=\"card-text\">\n              <small className=\"text-muted\">\n                (\n                <Moment\n                  parse=\"YYYY-MM-DDTHH:mm:ss.SSSZ\"\n                  tz=\"America/Santiago\"\n                  fromNow\n                >\n                  {poll.createdAt}\n                </Moment>\n                )\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":7,"column":1,"nodeType":"48","endLine":81,"endColumn":3},{"ruleId":"46","severity":1,"message":"47","line":7,"column":1,"nodeType":"48","endLine":160,"endColumn":3},{"ruleId":"46","severity":1,"message":"47","line":7,"column":1,"nodeType":"48","endLine":66,"endColumn":3},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]